{
    "appid"     : "9f2e9f72-b0e5-45d6-92a7-09ef820476c1",
    "name"    : "IMAP",
    "description" : "This App supports <b>email ingestion</b> and various <b>investigative</b> actions over <b>IMAP</b>.",
    "type": "email",
    "publisher": "Phantom",
    "main_module" : "imap_connector.pyc",
    "app_version": "2.0.1",
    "utctime_updated": "2017-04-29T02:30:48.000000Z",
    "package_name": "phantom_imap",
    "product_vendor": "Generic",
    "product_name": "IMAP",
    "product_version_regex": ".*",
    "min_phantom_version": "2.1.452",
    "logo": "phantom.png",
    "license": "Copyright (c) Phantom Cyber Corporation 2015-2017",
    "configuration": {
      "server": {
        "data_type": "string",
        "description": "Server IP/Hostname",
        "order": 0,
        "required": true
      },
      "ph": {
        "data_type": "ph",
        "order": 1
      },
      "username": {
        "data_type": "string",
        "description": "Username",
        "order": 2,
        "required": false
      },
      "password": {
        "data_type": "password",
        "description": "Password",
        "order": 3,
        "required": false
      },
      "folder": {
        "data_type": "string",
        "description": "Folder to ingest mails from (default is inbox)",
        "required": false,
        "order": 4,
        "default": "inbox"
      },
      "ingest_manner": {
        "data_type": "string",
        "description": "How to ingest",
        "required": true,
        "order": 5,
        "value_list": ["oldest first", "latest first"],
        "default": "oldest first",
        "verbose": "During ingestion, should the app get the latest emails or the oldest"
      },
      "first_run_max_emails": {
        "data_type": "numeric",
        "order": 6,
        "description": "Maximum emails to poll first time",
        "value": "2000",
        "required": true
      },
      "max_emails": {
        "data_type": "numeric",
        "order": 7,
        "description": "Maximum emails to poll",
        "value": "100",
        "required": true
      },
      "use_ssl": {
        "data_type": "boolean",
        "description": "Use SSL",
        "required": false,
        "order": 8,
        "default": true
      },
      "extract_attachments": {
        "data_type": "boolean",
        "description": "Extract Attachments",
        "required": false,
        "order": 9,
        "default": true
      },
      "extract_urls": {
        "data_type": "boolean",
        "description": "Extract URLs",
        "required": false,
        "order": 10,
        "default": true
      },
      "extract_ips": {
        "data_type": "boolean",
        "description": "Extract IPs",
        "required": false,
        "order": 11,
        "default": true
      },
      "extract_domains": {
        "data_type": "boolean",
        "description": "Extract Domain Names",
        "required": false,
        "order": 12,
        "default": true
      },
      "extract_hashes": {
        "data_type": "boolean",
        "description": "Extract Hashes",
        "required": false,
        "order": 13,
        "default": true
      }
    },
    "actions": [
      {
        "action": "test connectivity",
        "description": "Validate the asset configuration for connectivity. This action runs a quick query on the server to check the connection and credentials.",
        "type": "test",
        "identifier": "test_asset_connectivity",
        "read_only": true,
        "parameters": {
        },
        "output": [],
        "versions":"EQ(*)"
      },
      {
        "action": "get email",
        "description": "Get an email from the server or container",
        "verbose": "Every container that is created by the IMAP app, has the following values:<ul><li>The container ID, that is generated by the Phantom platform.</li><li>The Source ID that the app equates to the email ID on the remote server</li><li>The raw_email data in the container's data field is set to the RFC822 format of the email.</li></ul>This action parses email data and if specified creates containers and artifacts. The email data to parse is either extracted from the remote server if an email <b>id</b> is specified or from a Phantom container, if the <b>contianer_id</b> is specified.<br>If both parameters are specified, the action will use the <b>container_id</b>.<br>The container ID of the email is displayed in the UI at the following locations:<h3>Mission Control Page</h3><a href=\"/app_resource/imap_9f2e9f72-b0e5-45d6-92a7-09ef820476c1/img/mission_control_cont_id.png\"><img src=\"/app_resource/imap_9f2e9f72-b0e5-45d6-92a7-09ef820476c1/img/mission_control_cont_id.png\" width=\"400\"/></a><br><h3>Container listing page</h3><a href=\"/app_resource/imap_9f2e9f72-b0e5-45d6-92a7-09ef820476c1/img/incident_listing.png\"><img src=\"/app_resource/imap_9f2e9f72-b0e5-45d6-92a7-09ef820476c1/img/incident_listing.png\" width=\"400\"/></a><h3>The email ID used by the remote IMAP server, is displayed in the UI at:</h3><a href=\"/app_resource/imap_9f2e9f72-b0e5-45d6-92a7-09ef820476c1/img/mission_control_email_id.png\"><img src=\"/app_resource/imap_9f2e9f72-b0e5-45d6-92a7-09ef820476c1/img/mission_control_email_id.png\" width=\"400\"/></a><br><br>Do note that any containers and artifacts created will use the label configured in the asset.",
        "type": "investigate",
        "identifier": "get_email",
        "read_only": true,
        "parameters": {
          "id": {
            "description": "Message ID to get", 
            "data_type": "string",
            "order": 0,
            "contains": ["imap email id"],
            "primary": true,
            "required": false,
            "allow_list": true
          },
          "container_id": {
            "description": "Container ID to get email data from", 
            "data_type": "numeric",
            "order": 1,
            "contains": ["phantom container id"],
            "primary": true,
            "required": false,
            "allow_list": true
          },
          "ingest_email": {
            "description": "Create container and artifacts", 
            "data_type": "boolean",
            "order": 2,
            "primary": false,
            "required": false,
            "default": false
          }
        },
        "render": {
          "type": "json"
        },
        "output": [
          {
            "data_path": "action_result.data.*.To",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.Date",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.From",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.Subject",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.Received",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.Message-ID",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.References",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.User-Agent",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.In-Reply-To",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.Return-Path",
            "data_type": "string",
            "contains": [
              "email"
            ]
          },
          {
            "data_path": "action_result.data.*.Content-Type",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.MIME-Version",
            "data_type": "string"
          },
          {
            "data_path": "action_result.status",
            "data_type": "string"
          },
          {
            "data_path": "action_result.message",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.container_id",
            "data_type": "numeric",
            "contains": ["phantom container id"]
          },
          {
            "data_path": "action_result.parameter.id",
            "data_type": "string",
            "contains": ["imap email id"]
          },
          {
            "data_path": "action_result.parameter.ingest_email",
            "data_type": "boolean"
          },
          {
            "data_path": "action_result.summary.container_id",
            "data_type": "numeric",
            "contains": ["phantom container id"]
          },
          {
            "data_path": "summary.total_objects",
            "data_type": "numeric"
          },
          {
            "data_path": "summary.total_objects_successful",
            "data_type": "numeric"
          }
        ],
        "versions":"EQ(*)"
      },
      {
        "action": "on poll",
        "description": "Callback action for the on_poll ingest functionality.",
        "type": "ingest",
        "identifier": "on_poll",
        "read_only": true,
        "parameters": {
          "start_time": {
            "data_type": "numeric",
            "description": "Start of time range, in epoch time (milliseconds)",
            "verbose": "If not specified, the default is past 10 days"
          },
          "end_time": {
            "data_type": "numeric",
            "description": "End of time range, in epoch time (milliseconds)",
            "verbose": "If not specified, the default is now"
          },
          "container_id": {
            "data_type": "string",
            "description": "Matching email ID",
            "allow_list": true
          },
          "container_count": {
            "data_type": "numeric",
            "description": "Maximum number of container records to query for",
            "required": true,
            "value": 100
          },
          "artifact_count": {
            "data_type": "numeric",
            "description": "Maximum number of artifact records to query for",
            "required": true,
            "value": 1000
          }
        },
        "output": [],
        "versions":"EQ(*)"
      }
    ]
}
